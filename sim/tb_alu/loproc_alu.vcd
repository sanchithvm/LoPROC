$date
	Sun May 12 16:10:03 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_alu $end
$var wire 1 ! cout $end
$var wire 32 " alu_out [31:0] $end
$var reg 1 # cin $end
$var reg 8 $ opcode [7:0] $end
$var reg 32 % x [31:0] $end
$var reg 32 & y [31:0] $end
$scope module dut $end
$var wire 1 ' asel $end
$var wire 1 # cin $end
$var wire 1 ( cs $end
$var wire 1 ) f $end
$var wire 1 * l $end
$var wire 1 + nx $end
$var wire 1 , ny $end
$var wire 32 - op_and [31:0] $end
$var wire 32 . op_xor [31:0] $end
$var wire 32 / x [31:0] $end
$var wire 32 0 y [31:0] $end
$var wire 1 1 zx $end
$var wire 1 2 zy $end
$var wire 32 3 y2 [31:0] $end
$var wire 32 4 y1 [31:0] $end
$var wire 32 5 x2 [31:0] $end
$var wire 32 6 x1 [31:0] $end
$var wire 32 7 op_logic [31:0] $end
$var wire 32 8 op_arith [31:0] $end
$var wire 32 9 op [31:0] $end
$var wire 1 ! cout $end
$var wire 1 : c $end
$var wire 32 ; alu_out [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ;
0:
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
02
01
b0 0
b0 /
b0 .
b0 -
0,
0+
0*
0)
0(
0'
b0 &
b0 %
b0 $
0#
b0 "
0!
$end
#10000000000000
b100000100010 "
b100000100010 ;
b100000100010 9
b100000100010 7
b1100000100001 8
b11111011101 .
b100000100010 -
b111101110110 3
b100010101011 5
b111101110110 4
b100010101011 6
b111101110110 &
b111101110110 0
b100010101011 %
b100010101011 /
#20000000000000
b11111111111111111111011111011101 "
b11111111111111111111011111011101 ;
1'
b1 $
#30000000000000
b111111111111 "
b111111111111 ;
b11111111111111111111000000000000 9
b11111111111111111111000000000000 7
1!
b11111111111111111110011111011101 8
b11111111111111111111000000000000 -
b11111111111111111111011101010100 5
b11111111111111111111000010001001 3
1+
1,
b110001 $
#40000000000000
b11111111111111111111000000000000 "
b11111111111111111111000000000000 ;
0'
b110000 $
#50000000000000
b11111011101 "
b11111011101 ;
0!
b1100000100001 8
b100000100010 -
b11111011101 9
b100010101011 5
b111101110110 3
b11111011101 7
0+
0,
1*
b100 $
#60000000000000
b1100000100001 "
b1100000100001 ;
b1100000100001 9
b100000100010 7
1)
0*
b1000 $
#70000000000000
1(
b1010 $
#80000000000000
b1100000100010 "
b1100000100010 ;
b1100000100010 9
b1100000100010 8
1:
1#
#90000000000000
b11101010100 7
b11011001010 9
1!
b11111111111111111111100000100010 .
b11101010100 -
b11011001010 8
b11111111111111111111011101010100 5
0:
b11111111111111111111100100110101 "
b11111111111111111111100100110101 ;
1+
0(
1'
b101001 $
#100000000000000
b11011001011 "
b11011001011 ;
b11111111111111111111100100110100 9
b10001001 7
0!
b11111111111111111111100100110100 8
b10001001 -
b100010101011 5
b11111111111111111111000010001001 3
0+
1,
b11001 $
#110000000000000
b100010101100 "
b100010101100 ;
b11111111111111111111111111111111 3
b11111111111111111111011101010011 9
b11111111111111111111011101010100 7
b11111111111111111111011101010011 8
1!
b100010101011 .
b11111111111111111111011101010100 -
b0 4
b11111111111111111111011101010100 5
12
1+
b1111001 $
#120000000000000
b11111111111111111111111111111111 5
b111101110101 9
b111101110110 7
b111101110101 8
1!
b11111111111111111111000010001001 .
b111101110110 -
b0 6
b111101110110 4
b111101110110 3
b111101110101 "
b111101110101 ;
11
02
0,
0'
b10101000 $
